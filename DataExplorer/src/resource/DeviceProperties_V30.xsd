<?xml version="1.0" encoding="UTF-8"?>
<!-- 
*************************************************************************************
  	This file is part of GNU DataExplorer.

    GNU DataExplorer is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    GNU DataExplorer is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with GNU DataExplorer.  If not, see <http://www.gnu.org/licenses/>.
    
    Copyright (c) 2008,2009,2010,2011,2012,2013,2014,2015,2016 Winfried Bruegmann
    					2016 Thomas Eickert
************************************************************************************** 
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="qualified">
	<xs:element name="DeviceProperties" type="DevicePropertiesType">
		<xs:annotation>
			<xs:documentation>DataExplorer Properties</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="DeviceType">
		<xs:sequence>
			<xs:element name="name">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="implementation" type="xs:string" use="optional">
								<xs:annotation>
                                    <xs:documentation>specify implementation class if different from name</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="manufacturer" type="xs:string" />
			<xs:element name="manufacturerURL" type="xs:anyURI" />
			<xs:element name="group" type="device_types" />
			<xs:element name="image" type="xs:anyURI" />
			<xs:element name="usage" type="xs:boolean" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SerialPortType">
		<xs:sequence>
			<xs:element name="port" type="xs:string" />
			<xs:element name="baudeRate" type="baud_rate_types" />
			<xs:element name="dataBits" type="data_bits_types" />
			<xs:element name="stopBits" type="stop_bits_types" />
			<xs:element name="parity" type="parity_types" />
			<xs:element name="flowControlMode" type="flow_control_types" />
			<xs:element name="isRTS" type="xs:boolean" />
			<xs:element name="isDTR" type="xs:boolean" />
			<xs:sequence>
				<xs:element name="TimeOut" type="TimeOutType" minOccurs="0" />
			</xs:sequence>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UsbInterfaceType">
		<xs:sequence>
			<xs:element name="interface">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="number" type="xs:integer" use="optional">
								<xs:annotation>
									<xs:documentation>specify interface number</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="endPointIn" type="xs:string" />
			<xs:element name="endPointOut" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UsbPortType">
		<xs:sequence>
			<xs:element name="vendorId" type="xs:string" />
			<xs:element name="productId" type="xs:string" />
			<xs:element name="usbInterface" type="UsbInterfaceType" minOccurs="1" />
			<xs:element name="TimeOut" type="TimeOutType" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DevicePropertiesType">
		<xs:sequence>
			<xs:element name="Device" type="DeviceType">
				<xs:annotation>
                    <xs:documentation>Defines device specific global properties</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SerialPort" type="SerialPortType" minOccurs="0">
				<xs:annotation>
                    <xs:documentation>Defines the serial port configuration</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UsbPort" type="UsbPortType" minOccurs="0">
				<xs:annotation>
                    <xs:documentation>Defines the USB port configuration</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimeBase" type="TimeBaseType">
				<xs:annotation>
                    <xs:documentation>Defines the time base used to display the data. A timeStep of -1 means time comes with data block and is not constant over an record set</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataBlock" type="DataBlockType" minOccurs="0">
				<xs:annotation>
                    <xs:documentation>This describes the data as to be interpreted as input. Nomally this is handled by individual device plug-in</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="State" type="StateType" minOccurs="0">
				<xs:annotation>
                    <xs:documentation>Defines device processing states</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Channels">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Channel" type="ChannelType" maxOccurs="unbounded">
							<xs:annotation>
                                <xs:documentation>Defines output channels or configurations</xs:documentation>
							</xs:annotation>
							<xs:key name="settlementKey">
								<xs:annotation>
									<xs:documentation>Makes persistent history vaults independent from language settings
									</xs:documentation>
								</xs:annotation>
								<xs:selector xpath="Settlement" />
								<xs:field xpath="@settlementId" />
							</xs:key>
							<xs:key name="scoregroupKey">
								<xs:selector xpath="Scoregroup" />
								<xs:field xpath="@scoregroupId" />
							</xs:key>
							<xs:key name="transitionKey">
								<xs:selector xpath="Transition" />
								<xs:field xpath="@transitionId" />
							</xs:key>
							<xs:keyref name="transitionKeyref" refer="transitionKey">
								<xs:selector xpath="calculation" />
								<xs:field xpath="@transitionId" />
							</xs:keyref>
						</xs:element>
						<xs:element name="property" type="ChannelPropertyType" minOccurs="0" maxOccurs="unbounded" />
					</xs:sequence>
					<xs:attribute name="lastUseOrdinal" type="xs:integer" use="optional" />
				</xs:complexType>
			</xs:element>
			<xs:element name="Desktop" type="DesktopType">
				<xs:annotation>
                    <xs:documentation>Defines miscellaneous visualization properties of the application desktop</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TimeOutType">
		<xs:sequence>
			<xs:element name="ReadTimeOut" type="xs:integer">
				<xs:annotation>
                    <xs:documentation>Read timeout value per data chunk in msec</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReadStableIndex" type="xs:integer">
				<xs:annotation>
                    <xs:documentation>specify number of 1 msec cycles where the receive buffer do not change to detect buffer complete</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WriteCharDelayTime" type="xs:integer">
				<xs:annotation>
                    <xs:documentation>write delay time in msec per char</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WriteDelayTime" type="xs:integer">
				<xs:annotation>
                    <xs:documentation>delay time after write completed in msec</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DataBlockType">
		<xs:sequence>
			<xs:element name="format" maxOccurs="2">
				<xs:annotation>
					<xs:documentation>TEXT or BINARY</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="inputType" type="input_types" use="required" />
					<xs:attribute name="formatType" type="format_types" use="required" />
					<xs:attribute name="size" type="xs:integer" use="required" />
				</xs:complexType>
			</xs:element>
			<xs:element name="checkSum" minOccurs="0">
				<xs:complexType>
					<xs:attribute name="format" type="format_types" default="BINARY" />
					<xs:attribute name="type" type="checkSum_types" default="XOR" />
				</xs:complexType>
			</xs:element>
			<xs:element name="timeUnit" type="time_unit_types" default="msec" minOccurs="0" />
            <xs:element name="separator" type="comma_separator_types" default="semicolon" minOccurs="0"/>
			<xs:element name="leader" type="xs:string" default="$" minOccurs="0" />
			<xs:element name="trailer" type="xs:hexBinary" default="0D0A" minOccurs="0" />
			<xs:element name="preferredDataLocation" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:appinfo />
                    <xs:appinfo>preferred file location if raw data loaded from file</xs:appinfo>
					<xs:appinfo />
					<xs:documentation />
				</xs:annotation>
			</xs:element>
			<xs:element name="preferredFileExtention" type="xs:string" default="*.csv" minOccurs="0">
				<xs:annotation>
                    <xs:documentation>specify a file extention (*.abc) if the data file extension is diferent to *.csv</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="histoSamplingTime_ms" type="xs:integer" default="1000" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TimeBaseType">
		<xs:sequence>
			<xs:element name="name" type="xs:string" />
			<xs:element name="symbol" type="xs:string" />
			<xs:element name="unit" type="xs:string" />
			<xs:element name="timeStep" type="xs:double">
				<xs:annotation>
                    <xs:documentation>a negative value means variable time step, some devices allow editing, other edit by its configuration</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="avarage_timeStep" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>for backwards compatibility</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UTCdelta" type="xs:integer" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ScoregroupType">
		<xs:sequence>
			<xs:element name="name" type="xs:string" />
			<xs:element name="symbol" type="xs:string" />
			<xs:element name="unit" type="xs:string" />
			<xs:element name="active" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>true active for display, false inactive
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="score" type="ScoreType" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>for single values.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="property" type="PropertyType" minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="label" type="xs:string" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="scoregroupId" type="xs:int" use="required" />
	</xs:complexType>
	<xs:complexType name="SettlementType">
		<xs:sequence>
			<xs:element name="name" type="xs:string" />
			<xs:element name="symbol" type="xs:string" />
			<xs:element name="unit" type="xs:string" />
			<xs:element name="active" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>true active for display, false inactive
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="evaluation" type="EvaluationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>procedures for using measurement data.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="property" type="PropertyType" minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="suppressQuantiles" type="xs:boolean" nillable="false" minOccurs="0" />
			<xs:element name="label" type="xs:string" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="settlementId" type="xs:int" use="required" />
	</xs:complexType>
	<xs:complexType name="MeasurementType">
		<xs:sequence>
			<xs:element name="name" type="xs:string" />
			<xs:element name="symbol" type="xs:string" />
			<xs:element name="unit" type="xs:string" />
			<xs:element name="active" type="xs:boolean" nillable="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>true can read data, false inactive, null -> calculation = true
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="statistics" type="StatisticsType" minOccurs="0" />
			<xs:element name="property" type="PropertyType" minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="suppressQuantiles" type="xs:boolean" nillable="false" minOccurs="0" />
			<xs:element name="label" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ChannelType">
		<xs:sequence>
			<xs:element name="Measurement" type="MeasurementType" maxOccurs="unbounded">
				<xs:annotation>
                    <xs:documentation>Defines measurement capabilities, it might be calculations depending on measurements</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Settlement" type="SettlementType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
                    <xs:documentation>Defines calculation capabilities depending on measurements</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Transition" type="TransitionType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Defines trigger mechanisms</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Scoregroup" type="ScoregroupType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Defines collections of score values calculated,
						it might be calculations
						depending on measurements
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="type" type="channel_types" use="required" />
	</xs:complexType>
	<xs:complexType name="PropertyType">
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="value" use="required" />
		<xs:attribute name="type" type="data_types" use="required" />
		<xs:attribute name="description" type="xs:string" />
	</xs:complexType>
	<xs:complexType name="ScoreType">
		<xs:attribute name="label" type="score_label_types" use="required" />
		<xs:attribute name="value" use="required" />
		<xs:attribute name="type" type="data_types" use="required" />
		<xs:attribute name="description" type="xs:string" />
	</xs:complexType>
	<xs:complexType name="ChannelPropertyType">
		<xs:attribute name="name" type="channel_property_types" use="required" />
		<xs:attribute name="value" use="optional" />
		<xs:attribute name="type" type="data_types" use="required" />
		<xs:attribute name="description" type="xs:string" />
	</xs:complexType>
	<xs:complexType name="DesktopPropertyType">
		<xs:attribute name="name" type="desktop_property_types" use="required" />
		<xs:attribute name="value" type="xs:boolean" use="required" />
		<xs:attribute name="description" type="xs:string" />
		<xs:attribute name="target_reference_ordinal" type="xs:integer" />
	</xs:complexType>
	<xs:complexType name="DesktopType">
		<xs:sequence>
			<xs:element name="property" type="DesktopPropertyType" minOccurs="4" maxOccurs="8" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EvaluationType">
		<xs:sequence>
			<xs:element name="calculation" type="CalculationType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>calculations based on trigger</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="min" type="xs:boolean" use="required" />
		<xs:attribute name="max" type="xs:boolean" use="required" />
		<xs:attribute name="avg" type="xs:boolean" use="required" />
		<xs:attribute name="sigma" type="xs:boolean" use="required" />
		<xs:attribute name="sum" type="xs:boolean" use="required" />
		<xs:attribute name="first" type="xs:boolean" use="required" />
		<xs:attribute name="last" type="xs:boolean" use="required" />
		<xs:attribute name="comment" type="xs:string">
			<xs:annotation>
                <xs:documentation>comment for documentation purposes</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="StatisticsType">
		<xs:sequence>
			<xs:element name="trigger" type="TriggerType" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="min" type="xs:boolean" use="required" />
		<xs:attribute name="max" type="xs:boolean" use="required" />
		<xs:attribute name="avg" type="xs:boolean" use="required" />
		<xs:attribute name="sigma" type="xs:boolean" use="required" />
		<xs:attribute name="triggerRefOrdinal" type="xs:integer">
			<xs:annotation>
                <xs:documentation>references the measurement ordinal where trigger level is set in case of trigger is defined (0=VoltageReceiver;1=Voltage,2=Current, ...)</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="sumByTriggerRefOrdinal" type="xs:integer">
			<xs:annotation>
                <xs:documentation>calculates sum of values where trigger level becomes active at referenced triggered measurement ordinal</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="sumTriggerText" type="xs:string">
			<xs:annotation>
                <xs:documentation>this is the text displayed in front of sum value in case of trigger is defined</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="countByTrigger" type="xs:boolean">
			<xs:annotation>
                <xs:documentation>counts the number of events trigger level becomes active  at specified trigger type </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="countTriggerText" type="xs:string">
			<xs:annotation>
                <xs:documentation>text displayed in front of count value in case of trigger is defined</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="comment" type="xs:string">
			<xs:annotation>
                <xs:documentation>trigger related comment in case of trigger is defined</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="sumTriggerTimeText" type="xs:string">
			<xs:annotation>
                <xs:documentation>text displayed in front of the time sum value in case of trigger is defined displayed at time row</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ratioRefOrdinal" type="xs:integer">
			<xs:annotation>
                <xs:documentation>measurement ordinal to calculate the ratio of referenced avg or max value to sumByTriggerRefOrdinal</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ratioText" type="xs:string">
			<xs:annotation>
                <xs:documentation>text displayed in front of the calculated ratio case of resolvable dependencyes</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="sum" type="xs:boolean" />
	</xs:complexType>
	<xs:complexType name="TransitionType">
		<xs:attribute name="transitionId" type="xs:int" use="required">
			<xs:annotation>
				<xs:documentation>identifies the transition, e.g. in calculations
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="refOrdinal" type="xs:int" use="required">
			<xs:annotation>
				<xs:documentation>minimum time length in seconds of trigger range to
					filter short time periods
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="peak" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>
					true means the trigger fires if the threshold level is exceeded within
					the
					threshold time AND the recovery level is reached within the
					recovery time which starts after the
					threshold time.
					false means the trigger fires if the threshold level is exceeded within
					the
					threshold time
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="greater" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>true means the trigger fires at increasing values
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="percent" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>true means the trigger levels are relative levels
					based on the reference level.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="triggerLevel" type="xs:int" use="required">
			<xs:annotation>
				<xs:documentation>value which fires the trigger (absolute in units
					of the refOrdinal measurement
					or relative in percent based on the
					values in the reference time.)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="recoveryLevel" type="xs:int" use="required">
			<xs:annotation>
				<xs:documentation>hysteresis value for trigger off (10% means:
					trigger is switched off if the
					value recovers to a delta of 10%
					compared to the maximum / minimum value which fired the
					trigger)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="referenceTimeMsec" type="xs:int" use="required">
			<xs:annotation>
				<xs:documentation>time length in seconds for finding the maximum /
					minimum reference value. The
					end of the reference time is the last
					time step before the trigger fired.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="thresholdTimeMsec" type="xs:int" use="required">
			<xs:annotation>
				<xs:documentation>time length in seconds of trigger range for
					finding the maximum / minimum
					threshold value.
					Level: if the threshold does not conform perfectly to the threshold level
					and
					time minimum, the trigger is cancelled.
					once the threshold is triggered, the recovery time
					starts if the
					recovery level is constantly exceeded and does NOT depend on the
					threshold time.
					Peak: if the threshold does not conform perfectly to the threshold level
					and time minimum, the
					trigger continues.
					once the threshold is triggered, the recovery time starts after the end
					of the
					threshold time or if the recovery level is constantly
					exceeded during the rest of the threshold
					time.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="recoveryTimeMsec" type="xs:int" use="required">
			<xs:annotation>
				<xs:documentation>time length in seconds for finding the maximum /
					minimum hysteresis value.
					Level: if recovery does not conform perfectly to the recovery level and
					time minimum, the
					trigger continues.
					Peak: if recovery does not conform perfectly to the recovery level and
					time
					minimum, the trigger is cancelled.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="comment" type="xs:string">
			<xs:annotation>
				<xs:documentation>trigger related comment</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="CalculationType">
		<xs:attribute name="transitionId" type="xs:int" use="required">
			<xs:annotation>
				<xs:documentation>Specifies which transition triggers this
					calculation
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="calcType" type="calculation_types" use="required">
		</xs:attribute>
		<xs:attribute name="unsigned" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>take absolute values</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="refOrdinal" type="xs:int" use="required">
			<xs:annotation>
				<xs:documentation>first operand (measurement) for the calculation
					based on threshold values
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="leveling" type="leveling_types">
			<xs:annotation>
				<xs:documentation>procedure how to determine the first operand
					(measurement) during the threshold
					period (peak triggers only)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="refOrdinalDivisor" type="xs:int">
			<xs:annotation>
				<xs:documentation>second operand (measurement) for the calculation
					based on recovery values
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="divisorLeveling" type="leveling_types">
			<xs:annotation>
				<xs:documentation>procedure how to determine the second operand
					(measurement) during the recovery
					period (peak triggers only)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="basedOnRecovery" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>delta values are calculated based on recovery
					period values (peak triggers
					only). if false the base is the
					reference period. if missing the base are reference period and
					recovery period.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="comment" type="xs:string">
			<xs:annotation>
				<xs:documentation>trigger related comment</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="TriggerType">
		<xs:attribute name="level" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation>describes the value level where statistics
					calculation is active (4000 == 4A)
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isGreater" type="xs:boolean" use="required">
			<xs:annotation>
				<xs:documentation>true means all values above trigger level will be
					counted
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="minTimeSec" type="xs:integer" use="required">
			<xs:annotation>
				<xs:documentation>minimum time length in seconds of trigger range to
					filter short time periods
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="comment" type="xs:string">
			<xs:annotation>
				<xs:documentation>trigger related comment</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="StateType">
		<xs:sequence>
			<xs:element name="property" type="PropertyType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="data_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Integer" />
			<xs:enumeration value="Double" />
			<xs:enumeration value="Boolean" />
			<xs:enumeration value="String" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="comma_separator_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="semicolon" />
			<xs:enumeration value="comma" />
			<xs:enumeration value="colon" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="decimal_separator_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="dot" />
			<xs:enumeration value="comma" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="device_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="logger" />
			<xs:enumeration value="charger" />
			<xs:enumeration value="multimeter" />
			<xs:enumeration value="variometer" />
			<xs:enumeration value="flightrecorder" />
			<xs:enumeration value="balancer" />
			<xs:enumeration value="current-sink" />
			<xs:enumeration value="receiver" />
			<xs:enumeration value="global-positioning-system" />
			<xs:enumeration value="power-supply" />
			<xs:enumeration value="control-unit" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="channel_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="TYPE_OUTLET" />
			<xs:enumeration value="TYPE_CONFIG" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="flow_control_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="FLOWCONTROL_NONE" />
			<xs:enumeration value="FLOWCONTROL_XON_XOFF" />
			<xs:enumeration value="FLOWCONTROL_HARDWARE" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="data_bits_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="DATABITS_5" />
			<xs:enumeration value="DATABITS_6" />
			<xs:enumeration value="DATABITS_7" />
			<xs:enumeration value="DATABITS_8" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="stop_bits_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="STOPBITS_1" />
			<xs:enumeration value="STOPBITS_2" />
			<xs:enumeration value="STOPBITS_1_5" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="parity_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="PARITY_NONE" />
			<xs:enumeration value="PARITY_ODD" />
			<xs:enumeration value="PARITY_EVEN" />
			<xs:enumeration value="PARITY_MARK" />
			<xs:enumeration value="PARITY_SPACE" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="checkSum_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="XOR" />
			<xs:enumeration value="ADD" />
			<xs:enumeration value="OR" />
			<xs:enumeration value="AND" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="format_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="BYTE" />
			<xs:enumeration value="VALUE" />
			<xs:enumeration value="BINARY" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="input_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="FILE_IO" />
			<xs:enumeration value="SERIAL_IO" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="line_ending_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="crlf" />
			<xs:enumeration value="cr" />
			<xs:enumeration value="lf" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="baud_rate_types">
		<xs:restriction base="xs:integer">
			<xs:enumeration value="2400" />
			<xs:enumeration value="4800" />
			<xs:enumeration value="7200" />
			<xs:enumeration value="9600" />
			<xs:enumeration value="14400" />
			<xs:enumeration value="19200" />
			<xs:enumeration value="28800" />
			<xs:enumeration value="38400" />
			<xs:enumeration value="57600" />
			<xs:enumeration value="115200" />
			<xs:enumeration value="128000" />
			<xs:enumeration value="230400" />
			<xs:enumeration value="256000" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="measurement_property_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="offset" />
			<xs:enumeration value="factor" />
			<xs:enumeration value="reduction" />
			<xs:enumeration value="do_subtract_first" />
			<xs:enumeration value="do_subtract_last" />
			<xs:enumeration value="regression_type" />
			<xs:enumeration value="regression_type_curve" />
			<xs:enumeration value="regression_type_linear" />
			<xs:enumeration value="regression_interval_sec" />
			<xs:enumeration value="number_cells" />
			<xs:enumeration value="prop_n100W" />
			<xs:enumeration value="is_invert_current" />
			<xs:enumeration value="number_motor" />
			<xs:enumeration value="revolution_factor" />
			<xs:enumeration value="scale_sync_ref_ordinal" />
			<xs:enumeration value="google_earth_velocity_avg_limit_factor" />
			<xs:enumeration value="google_earth_velocity_lower_limit" />
			<xs:enumeration value="google_earth_velocity_upper_limit" />
			<xs:enumeration value="google_earth_within_limits_color" />
			<xs:enumeration value="google_earth_lower_limit_color" />
			<xs:enumeration value="google_earth_upper_limit_color" />
			<xs:enumeration value="google_earth_is_extrude" />
			<xs:enumeration value="google_earth_is_random_color" />
			<xs:enumeration value="filter_factor" />
			<xs:enumeration value="tolerate_sign_change" />
			<xs:enumeration value="none_specified" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="channel_property_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="enable_filter" />
			<xs:enumeration value="text_mode" />
			<xs:enumeration value="enable_channel" />
			<xs:enumeration value="number_poles" />
			<xs:enumeration value="pinion_gear" />
			<xs:enumeration value="main_gear" />
			<xs:enumeration value="status_fields" />
			<xs:enumeration value="time_info" />
			<xs:enumeration value="none_specified" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="time_unit_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="msec" />
			<xs:enumeration value="sec" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="desktop_property_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="table_tab" />
			<xs:enumeration value="digital_tab" />
			<xs:enumeration value="analog_tab" />
			<xs:enumeration value="voltage_per_cell_tab" />
			<xs:enumeration value="utility_garphics_tab" />
			<xs:enumeration value="utility_device_tab" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="calculation_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="min" />
			<xs:enumeration value="max" />
			<xs:enumeration value="avg" />
			<xs:enumeration value="sigma" />
			<xs:enumeration value="sum" />
			<xs:enumeration value="timeSum_ms" />
			<xs:enumeration value="count" />
			<xs:enumeration value="ratio" />
			<xs:enumeration value="ratioInverse" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="leveling_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="first" />
			<xs:enumeration value="last" />
			<xs:enumeration value="mid" />
			<xs:enumeration value="min" />
			<xs:enumeration value="max" />
			<xs:enumeration value="avg" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="score_label_types">
		<xs:restriction base="xs:string">
			<xs:enumeration value="duration_mm" />
			<xs:enumeration value="averageTimeStep_ms" />
			<xs:enumeration value="maximumTimeStep_ms" />
			<xs:enumeration value="minimumTimeStep_ms" />
			<xs:enumeration value="sigmaTimeStep_ms" />
			<xs:enumeration value="sampledReadings" />
			<xs:enumeration value="totalReadings" />
			<xs:enumeration value="totalPackages" />
			<xs:enumeration value="lostPackages" />
			<xs:enumeration value="lostPackagesPerMille" />
			<xs:enumeration value="lostPackagesAvg_ms" />
			<xs:enumeration value="lostPackagesMax_ms" />
			<xs:enumeration value="lostPackagesMin_ms" />
			<xs:enumeration value="lostPackagesSigma_ms" />
			<xs:enumeration value="sensors" />
			<xs:enumeration value="sensorVario" />
			<xs:enumeration value="sensorGps" />
			<xs:enumeration value="sensorGam" />
			<xs:enumeration value="sensorEam" />
			<xs:enumeration value="sensorEsc" />
			<xs:enumeration value="logDataVersion" />
			<xs:enumeration value="logDataExplorerVersion" />
			<xs:enumeration value="logFileVersion" />
			<xs:enumeration value="logRecordSetBytes" />
			<xs:enumeration value="logFileBytes" />
			<xs:enumeration value="logFileRecordSets" />
			<xs:enumeration value="elapsedHistoRecordSet_ms" />
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
